<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:context="http://www.springframework.org/schema/context"
    xmlns:mvc="http://www.springframework.org/schema/mvc"
    xmlns:tx="http://www.springframework.org/schema/tx"
    xmlns:aop="http://www.springframework.org/schema/aop"
    xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-4.3.xsd
        http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd
        http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.3.xsd
        http://www.springframework.org/schema/aop
        http://www.springframework.org/schema/aop/spring-aop-4.0.xsd ">

    <mvc:annotation-driven/>
    
	<context:component-scan base-package="com.wlt.deviceledger.service"/>
    <!-- 
    
    <context:component-scan base-package="com.wlt" >
        <context:exclude-filter type="annotation" expression="org.springframework.stereotype.service" />
	</context:component-scan> 
	
	-->
     
    <!-- 加载配置文件 -->
    <context:property-placeholder location="classpath:jdbc.properties" />

	<bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource"   
	init-method="init" destroy-method="close">  
	    <property name="driverClassName" value="${jdbc.driverClassName}" />  
	    <property name="url" value="${jdbc.url}" />  
	    <property name="username" value="${jdbc.username}" />  
	    <property name="password" value="${jdbc.password}" />  
	      
	     <!-- 配置初始化大小、最小、最大 -->    
<!-- 	    <property name="initialSize" value="${druid.pool.size.init}" />     -->
<!-- 	    <property name="minIdle" value="${druid.pool.size.min}" />      -->
<!-- 	    <property name="maxActive" value="${druid.pool.size.max}" />     -->
	      
	    <!-- 配置监控统计拦截的filters，去掉后监控界面sql无法统计 -->  
	    <property name="filters" value="stat" />   
	</bean>  
    <!-- 配置mybatis-plus的sqlSessionFactory -->
    <bean id="sqlSessionFactory" class="com.baomidou.mybatisplus.extension.spring.MybatisSqlSessionFactoryBean">
        <property name="dataSource" ref="dataSource" />
        <property name="configLocation" value="classpath:mybatis.xml"/>
        <property name="typeAliasesPackage" value="com/wlt/deviceledger/bean/*/*Bean"/>
        <property name="mapperLocations" value="classpath:mapper/*/*Mapper.xml"></property>
    </bean>

    <!-- mapper扫描 -->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"></property>
        <property name="basePackage" value="com.wlt.deviceledger.dao"></property>
<!--         com.wlt.deviceledger.dao.user.IUserDao -->
    </bean>
    <!-- 事务配置 -->
<!--     <bean class="org.springframework.jdbc.datasource.DataSourceTransactionManager" id="transactionManager"> -->
<!--        <property name="dataSource" ref="dataSource"></property> -->
<!--     </bean> -->

 

    <tx:advice id="txAdvice" transaction-manager="transactionManager">
        <tx:attributes>
            <!-- 对业务层所有方法添加事务，除了以 get、find、select 开始的 -->
            <tx:method name="*" isolation="DEFAULT" propagation="REQUIRED" rollback-for="java.lang.Exception"/>
            <!-- 查询操作没有必要开启事务，给只读事务添加一个属性 read-only -->
            <tx:method name="get*" read-only="true"/>
            <tx:method name="find*" read-only="true"/>
            <tx:method name="select*" read-only="true"/>
            <tx:method name="query*" read-only="true"/>
        </tx:attributes>
    </tx:advice>
    
      <aop:config>
        <aop:pointcut id="pointcut" expression="execution(* com.wlt.deviceledger.service.user.impl.*.*(..))"/>
        <aop:advisor pointcut-ref="pointcut" advice-ref="txAdvice"/>
    </aop:config>
    <!-- (事务管理)transaction manager, use JtaTransactionManager for global tx -->  
        <!-- 事务相关控制 -->
    <bean id="transactionManager"
          class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource"/>
    </bean>

    <!--启用最新的注解器、映射器-->
    <tx:annotation-driven transaction-manager="transactionManager"/>
</beans>